{"version":3,"sources":["App.module.css","components/Filter/filter.module.css","components/redux/actions.js","components/redux/selector.js","components/Form/form.js","components/List/list.js","components/Filter/filter.js","App.js","components/redux/reducer.js","components/redux/store.js","index.js","components/Form/form.module.css","components/List/list.module.css"],"names":["module","exports","actions","addContacts","createAction","name","number","payload","id","uuidv4","deleteContacts","filterChange","getContacts","state","contacts","items","getFilter","filter","allFilteredContacts","normalizedFilter","toLowerCase","includes","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","resetForm","inputChange","evt","target","value","className","s","formWrapper","form","onSubmit","preventDefault","find","contact","toLocaleLowerCase","alert","label","input","type","placeholder","pattern","onChange","button","ContactList","listWrapper","list","map","item","text","onClick","Filter","e","filterContact","currentTarget","App","title","createReducer","initialContacts","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c10a65fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"title\":\"App_title__-GfWs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"filter_label__3DTWP\",\"input\":\"filter_input__1g0Wd\"};","import { createAction } from \"@reduxjs/toolkit\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst addContacts = createAction(\"contacts/add\", ({ name, number }) => ({\n    payload: {\n        id: uuidv4(),\n        name,\n        number\n    },\n}));\nconst deleteContacts = createAction(\"contacts/delete\");\nconst filterChange = createAction(\"contacts/filter\");\nconst actions = { addContacts, deleteContacts, filterChange };\n\nexport default actions","export const getContacts = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\nexport const allFilteredContacts = (state) => {\n    const contacts = getContacts(state);\n    const filter = getFilter(state);\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n        name.toLowerCase().includes(normalizedFilter));\n}\n","import s from \"./form.module.css\";\nimport PropTypes from \"prop-types\";\n// import { v4 as uuidv4 } from \"uuid\";\nimport { useState } from \"react\";\nimport actions from \"../redux/actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getContacts } from \"../redux/selector\";\nfunction ContactForm() {\n \n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    if (contacts.find(\n      (contact) => contact.name.toLowerCase() === name.toLocaleLowerCase()\n    )) {\n      return alert(\"This contact has already been added to the list\");\n  }\n    dispatch(actions.addContacts({ name, number }));\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const inputChange = (evt) => {\n    switch(evt.target.name) {\n      case 'name':\n        setName(evt.target.value);\n        break;\n\n      case 'number':\n        setNumber(evt.target.value);\n        break;\n        \n      default:\n        return;  \n    }\n  };\n\n    return (\n      <div className={s.formWrapper}>\n        <form className={s.form} onSubmit={handleSubmit}>\n          <label className={s.label}>\n            Name\n            <input\n              className={s.input}\n              value={name}\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              onChange={inputChange}\n            />\n          </label>\n\n          <label className={s.label}>\n            Number\n            <input\n              className={s.input}\n              type=\"tel\"\n              value={number}\n              name=\"number\"\n              placeholder=\"Number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              onChange={inputChange}\n            />\n          </label>\n          <button className={s.button}>Add contact</button>\n        </form>\n      </div>\n    );\n  }\n\n\nContactForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.number,\n  handleSubmit: PropTypes.func,\n  inputChange: PropTypes.func,\n};\n\nexport default ContactForm;","import s from \"./list.module.css\";\nimport PropTypes from \"prop-types\";\nimport actions from \"../redux/actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { allFilteredContacts } from \"../redux/selector\";\n\nfunction ContactList() {\n  const getContacts = useSelector(allFilteredContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <div className={s.listWrapper}>\n      <ul className={s.list}>\n        {getContacts.map(({ name, number, id }) => {\n          return (\n            <li className={s.item} key={id}>\n              <p className={s.text}>{name}:</p>\n              <p className={s.text}>{number}</p>\n              <button\n                className={s.button}\n                type=\"button\"\n                onClick={() => dispatch(actions.deleteContacts(id))}\n              >\n                Delete\n            </button>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nContactList.propTypes = {\n  getContacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      number: PropTypes.string,\n      id: PropTypes.string,\n    })\n  )\n};\n\nexport default ContactList;\n","import s from \"./filter.module.css\";\nimport PropTypes from \"prop-types\";\nimport actions from \"../redux/actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getFilter } from \"../redux/selector\";\n\nfunction Filter() {\n\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const onFilterChange = e => {\n    dispatch(actions.filterContact(e.currentTarget.value))\n  }\n\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"name\"\n        value={filter}\n        onChange={onFilterChange}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  // onFilterChange: PropTypes.func,\n  filter: PropTypes.string,\n};\n\nexport default Filter;","import s from \"./App.module.css\";\nimport ContactForm from \"./components/Form/form\";\nimport ContactList from \"./components/List/list\";\nimport Filter from \"./components/Filter/filter\";\n\nfunction App()  {\n  return (\n      <div className={s.App}>\n        <h1 className={s.title}>Phonebook</h1>\n        <ContactForm/>\n        <h2 className={s.title}>Contacts</h2>\n        <Filter/>\n        <ContactList/>\n      </div>\n    );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport actions from \"./actions\";\nimport initialContacts from \"../contacts.json\";\n\nconst items = createReducer(initialContacts, {\n    [actions.addContacts]: (state, { payload }) => [...state, payload],\n    [actions.deleteContacts]: (state, { payload }) => state.filter(({id}) => id !== payload),\n})\n\nconst filter = createReducer(\"\", {\n    [actions.filterChange]: (_, { payload}) => payload,\n})\n\nexport default combineReducers({\n    items,\n    filter\n})","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport {\n    persistStore,\n    persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport contactsReducer from \"./reducer\"\n\nconst middleware = [\n    ...getDefaultMiddleware({\n        serializableCheck: {\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n        }\n    }),\n    logger\n];\n\nconst contactsPersistConfig = {\n    key: \"contacts\",\n    storage,\n    blacklist: [\"filter\"]\n};\n\nconst store = configureStore({\n    reducer: {\n        contacts: persistReducer(contactsPersistConfig, contactsReducer)\n    },\n    middleware,\n    devTools: process.env.NODE_ENV === \"development\"\n});\n\nconst persistor = persistStore(store);\nexport { store, persistor }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./components/redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <PersistGate persistor={persistor}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </PersistGate>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"form_formWrapper__2ISiL\",\"form\":\"form_form__ihEEy\",\"label\":\"form_label__3S5Qw\",\"input\":\"form_input__1_s0C\",\"button\":\"form_button__3cnGu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"list_item__1gE7I\",\"list\":\"list_list__36WwE\",\"text\":\"list_text__dSg5W\",\"button\":\"list_button__1v1Sn\"};"],"sourceRoot":""}